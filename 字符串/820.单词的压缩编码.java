/*
给定一个单词列表，我们将这个列表编码成一个索引字符串?S?与一个索引列表 A。

例如，如果这个列表是 ["time", "me", "bell"]，我们就可以将其表示为 S = "time#bell#" 和 indexes = [0, 2, 5]。

对于每一个索引，我们可以通过从字符串 S?中索引的位置开始读取字符串，直到 "#" 结束，来恢复我们之前的单词列表。

那么成功对给定单词列表进行编码的最小字符串长度是多少呢？

?

示例：

输入: words = ["time", "me", "bell"]
输出: 10
说明: S = "time#bell#" ， indexes = [0, 2, 5] 。
?

提示：

1 <= words.length?<= 2000
1 <=?words[i].length?<= 7
每个单词都是小写字母 。

解：1.对每个单词，枚举其后缀，从set中删除，最后剩下的都是不成为其他单词后缀的单词，统计长度即可。
2.逆序后使用字典树。
*/

import java.util.HashSet;
class Solution {
    public int minimumLengthEncoding(String[] words) {
        HashSet<String> set = new HashSet<>();
        for(String s:words) set.add(s);
        for(String s:words){
            for(int i=1;i<s.length();i++){
                String temp = s.substring(i,s.length());
                set.remove(temp);
            }
        }
        int count = 0;
        for(String s:set){
            count += (s.length()+1);
        }
        return count;
    }
}

